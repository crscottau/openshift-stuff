apiVersion: batch/v1
kind: CronJob
metadata:
  name: quay-db-backup
  namespace: quay
spec:
  # By default, run every day at 01:30 AEST (15:30 UTC)
  schedule: "30 15 * * *"

  # - "Allow" (default): allows CronJobs to run concurrently;
  # - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet;
  # - "Replace": cancels currently running job and replaces it with a new on
  concurrencyPolicy: Forbid

  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1

  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: quay-db-backup
            - name: root-ca
              configMap:
                name: root-ca
          initContainers:
            - resources:
                limits:
                  cpu: 500m
                  memory: 200Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
              terminationMessagePath: /dev/termination-log
              name: pg-dump
              command:
                - /bin/sh
                - '-c'
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: quay-registry-postgres-config-secret-h4tmg52tt5
                      key: database-username
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: quay-registry-postgres-config-secret-h4tmg52tt5
                      key: database-name
                - name: POSTGRESQL_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: quay-registry-postgres-config-secret-h4tmg52tt5
                      key: database-root-password
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: quay-registry-postgres-config-secret-h4tmg52tt5
                      key: database-password
              securityContext:
                capabilities:
                  drop:
                    - ALL
                allowPrivilegeEscalation: false
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: data
                  mountPath: /data
              terminationMessagePolicy: File
              image: 'registry.redhat.io/rhel8/postgresql-13@sha256:1d1364c675bd1f7cbcaf34d695ddbd385ddc59e16fb00334ddf7a9b5ba47ec70'
              args:
                - |
                  date
                  rm /data/* 
                  export PGPASSWORD=${POSTGRESQL_PASSWORD}
                  export BACKUP_NAME=/data/${POSTGRESQL_DATABASE}-$(date +"%Y%m%d%H%M%S").tar
                  pg_dump -v --dbname=${POSTGRESQL_DATABASE} --host=quay-registry-quay-database --port=5432 --username=${POSTGRESQL_USER} --format=tar --file=${BACKUP_NAME}
                  gzip ${BACKUP_NAME}
                  ls -l /data
          containers:
            - resources:
                limits:
                  cpu: 500m
                  memory: 200Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
              terminationMessagePath: /dev/termination-log
              name: copy-to-s3
              env:
                - name: ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: access_key
                - name: SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: secret_key
                - name: HOST
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: s3_endpoint
                - name: CMD
                  value: put-all-dir
                - name: BUCKET
                  value: 's3://s3endpoint.example.com'
                - name: CA_CERTS_FILE
                  value: '/etc/ca/ca-bundle.crt'
              securityContext:
                capabilities:
                  drop:
                    - ALL
                allowPrivilegeEscalation: false
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: data
                  mountPath: /opt/data
                - name: root-ca
                  mountPath: /etc/ca
              terminationMessagePolicy: File
              image: 'quay-image-registry.apps.hub-sdc.mgmt.cicz.gov.au/internal-images/util/s3cmd:1.01'
            - name: clean-old-backups
              image: 'quay-image-registry.apps.hub-sdc.mgmt.cicz.gov.au/internal-images/util/s3cmd:1.01'
              env:
                - name: ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: access_key
                - name: SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: secret_key
                - name: HOST
                  valueFrom:
                    secretKeyRef:
                      name: db-backup-s3-secret
                      key: s3_endpoint
                - name: CMD
                  value: cleanup
                - name: BUCKET
                  value: 's3://s3endpoint.example.com'
                - name: CA_CERTS_FILE
                  value: '/etc/ca/ca-bundle.crt'
                - name: AGE_THRESHOLD
                  value: '7'
              resources:
                limits:
                  cpu: 500m
                  memory: 200Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities:
                  drop:
                    - ALL
                allowPrivilegeEscalation: false
              volumeMounts:
                - name: root-ca
                  mountPath: /etc/ca
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          schedulerName: default-scheduler
